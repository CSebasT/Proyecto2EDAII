/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.WindowConstants;
import laberinto.*;

/**
 *
 * @author Nicolás B, Jhon M, César T
 */
public class VentanaNivel extends javax.swing.JFrame {

    Laberinto laberinto;
    JLabel[][] lbElementos;
    private ImageIcon imagenSuelo = null;
    private ImageIcon imagenCreador = null;
    private ImageIcon imagenPared = null;
    private ImageIcon imagenMeta = null;
    private ImageIcon imagenJugador = null;

    /**
     * Creates new form VentanaNivel
     */
    public VentanaNivel() {
        initComponents();
        setTitle("Laberinto");
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        try {
            imagenSuelo = new ImageIcon(ImageIO.read(new File("recursos/suelo.png")));
            imagenCreador = new ImageIcon(ImageIO.read(new File("recursos/creador.png")));
            imagenPared = new ImageIcon(ImageIO.read(new File("recursos/pared.png")));
            imagenMeta = new ImageIcon(ImageIO.read(new File("recursos/meta.png")));
            imagenJugador = new ImageIcon(ImageIO.read(new File("recursos/jugador.png")));
            cargarPantallaDeNuevoNivel();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        pnlPantalla.setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPantalla = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlPantalla.setBackground(new java.awt.Color(59, 137, 56));
        pnlPantalla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pnlPantallaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlPantallaLayout = new javax.swing.GroupLayout(pnlPantalla);
        pnlPantalla.setLayout(pnlPantallaLayout);
        pnlPantallaLayout.setHorizontalGroup(
            pnlPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );
        pnlPantallaLayout.setVerticalGroup(
            pnlPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(pnlPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pnlPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Ejecuta acciones de movimiento.
     */
    private void pnlPantallaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnlPantallaKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_W:
                laberinto.moverJugador(Direccion.ARRIBA);
                break;
            case KeyEvent.VK_S:
                laberinto.moverJugador(Direccion.ABAJO);
                break;
            case KeyEvent.VK_A:
                laberinto.moverJugador(Direccion.IZQUIERDA);
                break;
            case KeyEvent.VK_D:
                laberinto.moverJugador(Direccion.DERECHA);
                break;
        }
        actualizarPantalla(laberinto.getLaberintoCaracteres());
        laberinto.imprimirLaberinto();
    }//GEN-LAST:event_pnlPantallaKeyPressed
    
    /**
     * Crea y asigna las componentes al iniciar un nivel.
     */
    private void cargarPantallaDeNuevoNivel() throws IOException {
        iniciarPantalla();
        actualizarPantalla(laberinto.getLaberintoCaracteres());
    }


    /**
     * Crear un Laberinto y los elementos de la pantalla.
     */
    private void iniciarPantalla() {
        int dimensionCeldas = 5;
        laberinto = new Laberinto(dimensionCeldas);
        int dimensionLaberinto = laberinto.getDimensionLaberinto();
        pnlPantalla.setLayout(new GridLayout(dimensionLaberinto, dimensionLaberinto));
        lbElementos = new JLabel[dimensionLaberinto][dimensionLaberinto];
        ajustarTamañoDeVentana();
        for (int i = 0; i < lbElementos.length; i++) {
            for (int j = 0; j < lbElementos[0].length; j++) {
                lbElementos[i][j] = new JLabel();
                pnlPantalla.add(lbElementos[i][j]);
            }
        }
        laberinto.crearNuevoLaberinto();
    }

    /**
     * Ajusta el tamaño de la ventana.
     */
    private void ajustarTamañoDeVentana() {
        int tamañoHorizontalParaLaVentana = lbElementos[0].length * 50 + 80;
        int tamañoVerticalParaLaVentana = lbElementos.length * 50 + 110;
        setSize(tamañoHorizontalParaLaVentana, tamañoVerticalParaLaVentana);
        setLocationRelativeTo(null);
    }

    /**
     * Quita los elementos de la pantalla.
     */
    private void borrarPantalla() {
        for (JLabel[] lbElemento : lbElementos) {
            for (int j = 0; j < lbElementos[0].length; j++) {
                pnlPantalla.remove(lbElemento[j]);
            }
        }
    }

    /**
     * Quita las imágenes de los elementos.
     */
    private void reiniciarPantalla() {
        for (JLabel[] lbElemento : lbElementos) {
            for (int j = 0; j < lbElementos[0].length; j++) {
                lbElemento[j].setIcon(null);
            }
        }
    }

    /**
     * Asigna las imágenes a los elementos.
     */
    private void actualizarPantalla(char[][] laberintoCaracteres) {
        reiniciarPantalla();
        ImageIcon imagen;
        for (int i = 0; i < lbElementos.length; i++) {
            for (int j = 0; j < lbElementos[0].length; j++) {
                imagen = imagenSuelo;
                switch (laberintoCaracteres[i][j]) {
                    case 'P':
                        imagen = imagenPared;
                        break;
                    case 'M':
                        imagen = imagenMeta;
                        break;
                    case 'J':
                        imagen = imagenJugador;
                        break;
                    case 'C':
                        imagen = imagenCreador;
                        break;
                }
                lbElementos[i][j].setIcon(imagen);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaNivel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaNivel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaNivel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaNivel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaNivel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlPantalla;
    // End of variables declaration//GEN-END:variables
}
